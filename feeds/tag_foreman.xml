<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>circularspace</title><link href="https://mindriot101.github.io/" rel="alternate"></link><link href="https://mindriot101.github.io/feeds/tag_foreman.xml" rel="self"></link><id>https://mindriot101.github.io/</id><updated>2013-07-29T11:09:00+02:00</updated><entry><title>Using guard with foreman</title><link href="https://mindriot101.github.io/blog/2013/07/29/using-guard-with-foreman/" rel="alternate"></link><updated>2013-07-29T11:09:00+02:00</updated><author><name>Simon Walker</name></author><id>tag:mindriot101.github.io,2013-07-29:blog/2013/07/29/using-guard-with-foreman/</id><summary type="html">&lt;p&gt;I've been playing with &lt;a href="https://www.ruby-lang.org/"&gt;Ruby&lt;/a&gt; quite a bit recently and I like the way a custom-looking DSL can be created from the same source language.&lt;/p&gt;
&lt;p&gt;This means I've converted a lot of my tools (e.g. Makefiles) into Rakefiles and I've just found &lt;a href="https://ddollar.github.io/foreman/"&gt;foreman&lt;/a&gt; which can manage multiple subprocesses and combine their output into a nice looking coloured console result. This is typically used to manage web processes (server, task runner, development database etc.) and is required by &lt;a href="https://heroku.com"&gt;heroku&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was using this technique with a simple &lt;code&gt;Procfile&lt;/code&gt; for managing my thesis. I have two tasks running: &lt;a href="https://users.phys.psu.edu/~collins/software/latexmk-jcc/"&gt;latexmk&lt;/a&gt; which manages the latex compiling, and &lt;a href="https://guardgem.org/"&gt;guard&lt;/a&gt; which manages the python plotting.&lt;/p&gt;
&lt;p&gt;I added these to the &lt;code&gt;Procfile&lt;/code&gt; as such&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ss"&gt;latex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;latexmk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pvc&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="no"&gt;Thesis&lt;/span&gt;
&lt;span class="ss"&gt;plotting&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bundle&lt;/span&gt; &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="n"&gt;guard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This would cause both processes to hang, which I couldn't explain. I then thought that guard is interactive: it has an interface for managing specific tasks or getting info about the processes running. I searched through the guard help to find the &lt;code&gt;--no-interactions&lt;/code&gt; flag and this solved my problem. My new complete Procfile is now&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ss"&gt;latex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;latexmk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pvc&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="no"&gt;Thesis&lt;/span&gt;
&lt;span class="ss"&gt;plotting&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bundle&lt;/span&gt; &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="n"&gt;guard&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interactions&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="ruby"></category><category term="guard"></category><category term="foreman"></category><category term="latex"></category></entry></feed>