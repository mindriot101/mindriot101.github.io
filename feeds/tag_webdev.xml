<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>circularspace</title><link href="https://mindriot101.github.io/" rel="alternate"></link><link href="https://mindriot101.github.io/feeds/tag_webdev.xml" rel="self"></link><id>https://mindriot101.github.io/</id><updated>2013-03-10T00:00:00+01:00</updated><entry><title>Cross site REST development</title><link href="https://mindriot101.github.io/blog/2013/03/10/cross-site-rest-development/" rel="alternate"></link><updated>2013-03-10T00:00:00+01:00</updated><author><name>Simon Walker</name></author><id>tag:mindriot101.github.io,2013-03-10:blog/2013/03/10/cross-site-rest-development/</id><summary type="html">&lt;p&gt;Often when developing complex client side apps, a simple &lt;code&gt;python -m SimpleHTTPServer&lt;/code&gt; can host the html. For a node backend though, a second server has to be run to host the REST api, which must be on a different domain. For example the python server is on port &lt;code&gt;8000&lt;/code&gt;, whereas the REST server is run on port &lt;code&gt;3000&lt;/code&gt;.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;This will usually throw an error containing the script &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Origin http://localhost:8000 is not allowed by Access-Control-Allow-Origin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a security measure input by web browsers to prevent cross domain scripting attacks, and is a good idea, but during development this can be a problem.&lt;/p&gt;
&lt;p&gt;One option is to use a fully featured web server e.g. express but for rich client side applications this is generally overkill, a simpler library such as &lt;a href="http://mcavage.github.com/node-restify/"&gt;restify&lt;/a&gt; is ideal.&lt;/p&gt;
&lt;p&gt;A nice option as supplied by &lt;a href="http://stackoverflow.com/a/14187628/56711"&gt;this&lt;/a&gt; SO answer is to add middleware to allow certain domains access to the REST server.&lt;/p&gt;
&lt;p&gt;For development this is a handy workaround, but for production obviously &lt;em&gt;DO NOT USE!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For restify this can be inserted before your normal CRUD routes as middleware using &lt;code&gt;server.use(...)&lt;/code&gt;.&lt;/p&gt;</summary><category term="python"></category><category term="webdev"></category></entry></feed>